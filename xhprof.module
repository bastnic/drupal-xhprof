<?php

// $Id$

/**
 * @file
 */

$xhprof_profiling_enabled = false;

/**
 * Implementation of hook_menu().
 */
function xhprof_menu() {
  $items['admin/settings/xhprof'] = array(
    'title' => 'xhprof Settings',
    'description' => 'xhprof Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xhprof_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
	);
	
  $items['admin/xhprof/runs'] = array(
    'title' => 'xhprof Runs',
    'description' => 'xhprof Runs',
    'page callback' => 'xhprof_runs_view',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
	);
	
  $items['admin/xhprof/run/%'] = array(
    'title' => 'xhprof Run Details',
    'description' => 'xhprof Run Details',
    'page callback' => 'xhprof_runs_view_details',
    'page arguments' => array(3),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
	);

	return $items;
}

/**
 * Implementation of hook_boot().
 */
function xhprof_boot() {
  if (!extension_loaded('xhprof') or !function_exists("xhprof_enable")) {
    return;
  }
  
  // So we don't waste time checking again on xhprof_exit()  
  global $xhprof_profiling_enabled;

  if (xhprof_profiling_enabled()) {
    xhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY);
    $xhprof_profiling_enabled = true;
  }
}

/**
 * Implementation of hook_exit().
 */
function xhprof_exit() {
  global $xhprof_profiling_enabled;
  
  if (!$xhprof_profiling_enabled) {
    return;
  }
  
  // Stop profiling and retrieve profile data
  $xhprof_data = xhprof_disable();
  //krumo($xhprof_data);
  
  // Include xhprof utils
  include_once drupal_get_path('module', 'xhprof') . '/xhprof_lib/utils/xhprof_lib.php';
  include_once drupal_get_path('module', 'xhprof') . '/xhprof_lib/utils/xhprof_runs.php';

  // Generate xhprof run file
  $xhprof_runs = new XHProfRuns_Default();
  $run_id = $xhprof_runs->save_run($xhprof_data, "xhprof_run");

  // Record this run to the database
  $query = "
    INSERT INTO {xhprof_runs} 
      (run_id, url, data, time, created) 
    VALUES 
      ('%s', '%s', '%s', %d, %d)";
  db_query($query, $run_id, $_GET['q'], serialize($xhprof_data), $xhprof_data['main()']['wt'], time());
}

function xhprof_admin_settings() {
  $form['xhprof_include_paths'] = array( 
    '#type' => 'textarea',
    '#title' => t('Paths to include in profiling'), 
    '#default_value' => variable_get('xhprof_include_paths', NULL), 
    '#description' => t('xhprof will profile this list of paths.'), 
  );

  $form['xhprof_exclude_paths'] = array( 
    '#type' => 'textarea',
    '#title' => t('Paths to exclude in profiling'), 
    '#default_value' => variable_get('xhprof_exclude_paths', NULL), 
    '#description' => t('xhprof will NOT profile this list of paths.'), 
  );

  return system_settings_form($form);
}

function xhprof_runs_view() {
  $content = array();
  
  drupal_add_js(drupal_get_path("module", "xhprof") . "/xhprof.js");
  
  // Table attributes
  $attributes = array('id' => 'xhprof-runs-table');
  
  // Table header
  $header = array();
  $header[] = array('data' => 'Run ID', 'field' => 'run_id');
  $header[] = array('data' => 'Url', 'field' => 'url');
  $header[] = array('data' => 'Total Time', 'field' => 'time');
  $header[] = array('data' => 'Created', 'field' => 'created', 'sort' => 'desc');
  
  $query = 'SELECT run_id, url, time, created FROM {xhprof_runs} '.tablesort_sql($header);
  $result = pager_query($query, 25);
  
  // Table rows
  $rows = array();
  while ($data = db_fetch_object($result)) {
    $row = array();
    $row[] = array('data' => l($data->run_id, 'admin/xhprof/run/'.$data->run_id));
    $row[] = array('data' => l($data->url, $data->url));
    $row[] = array('data' => number_format($data->time / 1000) . ' ms');    
    $row[] = array('data' => $data->created);
    $rows[] = $row;
  }
  
  $content[] = theme_table($header, $rows, $attributes);
  $content[] = theme_pager(NULL, 25);
  
  return implode("\n", $content);
}

function xhprof_runs_view_details($run_id) {
  global $base_url;  
  $content = array();
  
  $xhprof_url = $base_url . '/' . drupal_get_path('module', 'xhprof') . "/xhprof_html/index.php?run=%s&source=xhprof_run";
  
  $content[] = l("View xhprof Report", sprintf($xhprof_url, $run_id));
  
  return implode("\n", $content);
}

function xhprof_profiling_enabled() {
  require_once 'includes/path.inc';
  
  if (isset($_GET['XHPROF_ENABLED'])) {
    return true;
  }

  if (isset($_GET['XHPROF_DISABLED'])) {
    return false;
  }

  $path = drupal_get_path_alias($_GET['q']);

  return (bool) (drupal_match_path($path, variable_get("xhprof_include_paths", '')) 
      and !drupal_match_path($path, variable_get("xhprof_exclude_paths", '')));
}


